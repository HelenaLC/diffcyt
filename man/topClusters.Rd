% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/topClusters.R
\name{topClusters}
\alias{topClusters}
\title{Show top clusters or cluster-marker combinations}
\usage{
topClusters(res, order = TRUE, all = FALSE, top_n = 20)
}
\arguments{
\item{res}{Output object containing results from one of the differential testing
functions, in \code{SummarizedExperiment} format. Differential test results are
stored in \code{rowData}. See \code{\link{testDA_edgeR}}, \code{\link{testDA_voom}},
\code{\link{testDA_GLMM}}, \code{\link{testDS_limma}}, or \code{\link{testDS_LMM}}.}

\item{order}{Whether to order results by adjusted p-value. Default = TRUE.}

\item{all}{Whether to display all clusters or cluster-marker combinations (instead of
top \code{top_n}). Default = FALSE.}

\item{top_n}{Number of clusters or cluster-marker combinations to display (if \code{all
= FALSE}). Default = 20.}
}
\value{
Returns a \code{DataFrame} of results for the \code{top_n} clusters or
  cluster-marker combinations, ordered by adjusted p-values.
}
\description{
Show results for top (most highly significant) clusters or cluster-marker combinations
}
\details{
Summary function to display results for top (most highly significant) detected clusters
or cluster-marker combinations.

The differential testing functions return results in the form of p-values and adjusted
p-values for each cluster (DA tests) or cluster-marker combination (DS tests), which
can be used to rank the clusters or cluster-marker combinations by their evidence for
differential abundance or differential states. The p-values and adjusted p-values are
stored in the \code{rowData} of the output \code{SummarizedExperiment} object generated
by the testing functions.

This summary function displays the \code{rowData} from the \code{SummarizedExperiment}
output object as a \code{DataFrame}, with clusters or cluster-marker combinations
ordered by the adjusted p-values.
}
\examples{
# See the package vignette for a full workflow example demonstrating each type of
# differential discovery analysis (DA and DS), and explaining each function in the
# 'diffcyt' pipeline.

# Create some random data (without differential signal)
cofactor <- 5
set.seed(123)
d_input <- list(
  sample1 = sinh(matrix(rnorm(20000, mean = 0, sd = 1), ncol = 20)) * cofactor, 
  sample2 = sinh(matrix(rnorm(20000, mean = 0, sd = 1), ncol = 20)) * cofactor, 
  sample3 = sinh(matrix(rnorm(20000, mean = 0, sd = 1), ncol = 20)) * cofactor, 
  sample4 = sinh(matrix(rnorm(20000, mean = 0, sd = 1), ncol = 20)) * cofactor
)
# Add differential signal (for some cells and markers in one group)
ix_rows <- 901:1000
ix_cols <- c(6:10, 16:20)
d_input[[3]][ix_rows, ix_cols] <- sinh(matrix(rnorm(1000, mean = 2, sd = 1), ncol = 10)) * cofactor
d_input[[4]][ix_rows, ix_cols] <- sinh(matrix(rnorm(1000, mean = 2, sd = 1), ncol = 10)) * cofactor

sample_info <- data.frame(
  sample = factor(paste0("sample", 1:4)), 
  group = factor(c("group1", "group1", "group2", "group2")), 
  stringsAsFactors = FALSE
)

marker_info <- data.frame(
  marker_name = paste0("marker", 1:20), 
  is_marker = rep(TRUE, 20), 
  is_type_marker = c(rep(TRUE, 10), rep(FALSE, 10)), 
  is_state_marker = c(rep(FALSE, 10), rep(TRUE, 10)), 
  stringsAsFactors = FALSE
)

# Create design matrix
design <- createDesignMatrix(sample_info, cols_include = 2)
# Create contrast matrix
contrast <- createContrast(c(0, 1))

# Test for differential abundance (DA) of clusters (using default method 'diffcyt-DA-edgeR')
out_DA <- diffcyt(d_input, sample_info, marker_info, 
                  design = design, contrast = contrast, 
                  analysis_type = "DA", method_DA = "diffcyt-DA-edgeR")

# Test for differential states (DS) within clusters (using default method 'diffcyt-DS-limma')
out_DS <- diffcyt(d_input, sample_info, marker_info, 
                  design = design, contrast = contrast, 
                  analysis_type = "DS", method_DS = "diffcyt-DS-limma", 
                  plot = FALSE)

# Display results for top DA clusters
topClusters(out_DA$res)

# Display results for top DS cluster-marker combinations
topClusters(out_DS$res)

}
