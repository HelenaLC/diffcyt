% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcMediansAndFreq.R
\name{calcMediansAndFreq}
\alias{calcMediansAndFreq}
\title{Calculate cluster medians and frequencies}
\usage{
calcMediansAndFreq(d_se)
}
\arguments{
\item{d_se}{Transformed data object from previous steps, in 
\code{\link[SummarizedExperiment]{SummarizedExperiment}} format, with cluster labels 
added in row meta-data using \code{\link{generateClusters}}.}
}
\value{
\code{\link[SummarizedExperiment]{SummarizedExperiment}} object, where rows = 
  clusters, columns = samples, sheets ('assay' slots) = functional markers. The 
  additional last sheet ('assay' slot) contains the cluster frequencies.
}
\description{
Calculate cluster medians (median functional marker expression) and frequencies (number
of cells) by cluster and sample
}
\details{
Calculate median expression of functional markers (cluster medians) and number of cells 
(cluster frequencies) by cluster and sample (i.e. for each cluster in each sample).

The cluster frequencies are used as weights in the subsequent statistical tests. The
cluster medians are either used for directly testing differences in medians
('diffcyt-med'), or for visualization of results from the other methodologies
('diffcyt-FDA' and 'diffcyt-KS').

Results are returned as a new \code{\link[SummarizedExperiment]{SummarizedExperiment}} 
object, where rows = clusters, columns = samples, sheets ('assay' slots) = functional 
markers. The additional last sheet ('assay' slot) contains the cluster frequencies.
}
\examples{
library(flowCore)
library(limma)

# filenames
files <- list.files(system.file("extdata", package = "diffcyt"), 
                    pattern = "\\\\.fcs$", full.names = TRUE)
files_BCRXL <- files[grep("BCRXL", files)]
files_ref <- files[grep("ref", files)]

# load data
files_load <- c(files_BCRXL, files_ref)
d_input <- lapply(files_load, read.FCS, transformation = FALSE, truncate_max_range = FALSE)

# sample IDs and group IDs
sample_IDs <- gsub("\\\\.fcs$", "", basename(files_load))
sample_IDs
group_IDs <- gsub("^patient[0-9]_", "", sample_IDs)
group_IDs

# indices of all marker columns, lineage markers, and functional markers
# (see Table 1 in Bruggner et al. 2014)
marker_cols <- c(3:4, 7:9, 11:19, 21:22, 24:26, 28:31, 33)
lineage_cols <- c(3:4, 9, 11,12,14, 21, 29, 31, 33)
functional_cols <- setdiff(marker_cols, lineage_cols)

# prepare data
d_se <- prepareData(d_input, sample_IDs, group_IDs, marker_cols, lineage_cols, functional_cols)

# transform data
d_se <- transformData(d_se, cofactor = 5)

# generate clusters (small 10x10 SOM grid due to small size of example data set)
d_se <- generateClusters(d_se, xdim = 10, ydim = 10, seed = 123, plot = FALSE)

# calculate cluster medians and frequencies
d_clus <- calcMediansAndFreq(d_se)
}
