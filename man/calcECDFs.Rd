% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcECDFs.R
\name{calcECDFs}
\alias{calcECDFs}
\title{Calculate empirical cumulative distribution functions (ECDFs)}
\usage{
calcECDFs(d_se, resolution = 30)
}
\arguments{
\item{d_se}{Transformed data object from previous steps, in 
\code{\link[SummarizedExperiment]{SummarizedExperiment}} format, with cluster labels 
added in row meta-data using \code{\link{generateClusters}}.}

\item{resolution}{Resolution for evaluating ECDFs. The value of each ECDF is calculated
at this number of equally spaced points between the maximum and minimum observed
marker expression values for a given cluster-sample combination. Default = 30.}
}
\value{
\code{\link[SummarizedExperiment]{SummarizedExperiment}} object, where rows = 
  clusters, columns = samples, sheets ('assay' slots) = functional markers. Each entry
  is a list of values (i.e. the evaluated ECDF values) with length \code{resolution}.
}
\description{
Calculate empirical cumulative distribution functions (ECDFs) for FDA-based methods
}
\details{
The functional data analysis (FDA) based methodology in "diffcyt-FDA" uses empirical
cumulative distribution functions (ECDFs) of the functional marker expression profiles 
by cluster and sample, to test for differential expression between sample groups.

This function calculates the ECDFs for each cluster-sample combination for each 
functional marker, and evaluates each of them at a set of equally-spaced points. These 
ECDF values can then be used for differential testing with \code{testDE_FDA}.

The ECDF values are returned in a
\code{\link[SummarizedExperiment]{SummarizedExperiment}} with the same shape as the
output from \code{\link{calcMediansAndFreq}}: rows = clusters, columns = samples,
sheets ('assay' slots) = functional markers.
}
\examples{
library(flowCore)
library(limma)

# filenames
files <- list.files(system.file("extdata", package = "diffcyt"), 
                    pattern = "\\\\.fcs$", full.names = TRUE)
files_BCRXL <- files[grep("BCRXL", files)]
files_ref <- files[grep("ref", files)]

# load data
files_load <- c(files_BCRXL, files_ref)
d_input <- lapply(files_load, read.FCS, transformation = FALSE, truncate_max_range = FALSE)

# sample IDs and group IDs
sample_IDs <- gsub("\\\\.fcs$", "", basename(files_load))
sample_IDs
group_IDs <- gsub("^patient[0-9]_", "", sample_IDs)
group_IDs

# indices of all marker columns, lineage markers, and functional markers
# (see Table 1 in Bruggner et al. 2014)
marker_cols <- c(3:4, 7:9, 11:19, 21:22, 24:26, 28:31, 33)
lineage_cols <- c(3:4, 9, 11,12,14, 21, 29, 31, 33)
functional_cols <- setdiff(marker_cols, lineage_cols)

# prepare data
d_se <- prepareData(d_input, sample_IDs, group_IDs, marker_cols, lineage_cols, functional_cols)

# transform data
d_se <- transformData(d_se, cofactor = 5)

# generate clusters (small 10x10 SOM grid due to small size of example data set)
d_se <- generateClusters(d_se, cols_to_use = lineage_cols, xdim = 10, ydim = 10, 
                         seed = 123, plot = FALSE)

# calculate cluster medians and frequencies
d_clus <- calcMediansAndFreq(d_se)

# calculate ECDFs
d_ecdfs <- calcECDFs(d_se)
}
