% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testDE_med.R
\name{testDE_med}
\alias{testDE_med}
\title{Test for differential expression within clusters (method: 'diffcyt-med')}
\usage{
testDE_med(d_counts, d_medians, group_IDs, paired = FALSE, block_IDs = NULL,
  min_cells = 5, min_samples = NULL, plot = FALSE, path = ".")
}
\arguments{
\item{d_counts}{\code{\link[SummarizedExperiment]{SummarizedExperiment}} object 
containing cluster cell counts, from \code{\link{calcCounts}}.}

\item{d_medians}{\code{\link[SummarizedExperiment]{SummarizedExperiment}} object 
containing cluster medians (median expression of functional markers), from 
\code{\link{calcMedians}}.}

\item{group_IDs}{Vector or factor of group membership IDs for each sample (e.g. 
diseased vs. healthy, or treated vs. untreated). Vectors are converted to factors 
internally. The first level of the factor will be used as the reference level for 
differential testing. Currently, only two-group comparisons are implemented.}

\item{paired}{Whether to perform paired tests. Set to TRUE and provide the 
\code{block_IDs} argument (e.g. patient IDs) to calculate paired tests. Default = 
FALSE.}

\item{block_IDs}{Vector or factor of block IDs for samples (e.g. patient ID), required 
for paired tests. Default = NULL.}

\item{min_cells}{Filtering parameter. Default = 5. Clusters are kept if there are at 
least \code{min_cells} cells per sample in at least \code{min_samples} samples in
either condition. Filtered clusters are removed from differential expression testing
for all markers.}

\item{min_samples}{Filtering parameter. Default = \code{n - 1}, where \code{n} = number
of replicates in smallest group. Clusters are kept if there are at least
\code{min_cells} cells per sample in at least \code{min_samples} samples in either
condition. Filtered clusters are removed from differential expression testing for all
markers.}

\item{plot}{Whether to save 'voom' diagnostic plots. Default = FALSE.}

\item{path}{Path to save diagnostic plots, if \code{plot = TRUE}. Default = current 
working directory.}
}
\value{
Returns new \code{\link[SummarizedExperiment]{SummarizedExperiment}} object, 
  where rows = cluster-marker combinations, columns = samples. In the rows, clusters
  are repeated for each functional marker (i.e. the sheets or 'assays' from the
  previous \code{d_medians} object are stacked into a single matrix). Differential test
  results are stored in the 'rowData' slot. Results include p-values and adjusted
  p-values from the \code{\link[limma]{limma}} empirical Bayes moderated tests, which
  can be used to rank cluster-marker combinations by evidence for differential
  expression. The results can be accessed with the
  \code{\link[SummarizedExperiment]{rowData}} accessor function.
}
\description{
Calculate tests for differential expression of functional markers within clusters 
(method: 'diffcyt-med'), using empirical Bayes moderation of cluster variances to 
improve power.
}
\details{
The 'diffcyt-med' methodology uses median marker expression to characterize the signal
of interest within each cluster. The differential expression tests compare the median 
marker expression within clusters between samples in the two groups (e.g. diseased vs.
healthy).

To stabilize the mean-variance relationship, we use the \code{\link[limma]{voom}} 
method (Law et al. 2014, \emph{Genomie Biology}) to transform the expression values and
estimate observation-level weights. Diagnostic plots are shown if \code{plot = TRUE}.

Filtering: Clusters are kept for testing if there are at least \code{min_cells} cells
per sample in at least \code{min_samples} samples in either condition. Filtered
clusters are removed from differential expression testing for all markers.

Empirical Bayes methods are used to share information on variability (i.e. variance 
across samples for a single cluster) between clusters, to improve statistical power. We
use the \code{\link[limma]{limma}} package (Ritchie et al. 2015, \emph{Nucleic Acids 
Research}) to calculate the empirical Bayes moderated tests.

Alternative methodologies for testing for differential expression within clusters are 
available in the functions \code{\link{testDE_FDA}}, \code{\link{testDE_KS}}, and 
\code{\link{testDE_LM}}.
}
\examples{
library(flowCore)
library(SummarizedExperiment)

# filenames
files <- list.files(system.file("extdata", package = "diffcyt"), 
                    pattern = "\\\\.fcs$", full.names = TRUE)
files_BCRXL <- files[grep("BCRXL", files)]
files_ref <- files[grep("ref", files)]

# load data
files_load <- c(files_BCRXL, files_ref)
d_input <- lapply(files_load, read.FCS, transformation = FALSE, truncate_max_range = FALSE)

# sample IDs and group IDs
sample_IDs <- gsub("\\\\.fcs$", "", basename(files_load))
sample_IDs
group_IDs <- gsub("^patient[0-9]_", "", sample_IDs)
group_IDs

# set group reference level for differential testing
group_IDs <- factor(group_IDs, levels = c("ref", "BCRXL"))
group_IDs

# indices of all marker columns, lineage markers, and functional markers
# (see Table 1 in Bruggner et al. 2014)
cols_markers <- c(3:4, 7:9, 11:19, 21:22, 24:26, 28:31, 33)
cols_lineage <- c(3:4, 9, 11,12,14, 21, 29, 31, 33)
cols_func <- setdiff(cols_markers, cols_lineage)

# prepare data
# (note: using lineage markers for clustering, and functional markers for DE testing)
d_se <- prepareData(d_input, sample_IDs, cols_markers, cols_lineage, cols_func)

# transform data
d_se <- transformData(d_se, cofactor = 5)

# generate clusters
# (note: using small number of clusters for demonstration purposes in this example)
d_se <- generateClusters(d_se, xdim = 4, ydim = 4, seed = 123)

# calculate cluster cell counts
d_counts <- calcCounts(d_se)

# calculate cluster medians
d_medians <- calcMedians(d_se)

# calculate ECDFs
d_ecdfs <- calcECDFs(d_se)


#############################################################################
# Test for differential expression (DE) of functional markers within clusters
# (method 'diffcyt-med')
#############################################################################

# create block IDs for paired tests (this is a paired data set, so we use 1 block per patient)
patient_IDs <- factor(gsub("_(BCRXL|ref)$", "", sample_IDs))
patient_IDs <- as.numeric(patient_IDs)
patient_IDs

# test for differential expression (DE) of functional markers within clusters
res_DE <- testDE_med(d_counts, d_medians, group_IDs, paired = TRUE, block_IDs = patient_IDs)

# show results using 'rowData' accessor function
rowData(res_DE)

# sort to show top (most highly significant) cluster-marker combinations
head(rowData(res_DE)[order(rowData(res_DE)$adj.P.Val), ], 10)

}
