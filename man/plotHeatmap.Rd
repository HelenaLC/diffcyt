% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotHeatmap.R
\name{plotHeatmap}
\alias{plotHeatmap}
\title{Plot heatmap}
\usage{
plotHeatmap(out = NULL, analysis_type = c("DA", "DS"), top_n = 20,
  threshold = 0.1, res = NULL, d_se = NULL, d_counts = NULL,
  d_medians = NULL, d_medians_all_samples = NULL)
}
\arguments{
\item{out}{Output object from \code{\link{diffcyt}} wrapper function, containing
results object \code{res} and data objects \code{d_se}, \code{d_counts},
\code{d_medians}, and \code{d_medians_all_samples}. Alternatively, the results and
data objects can be provided individually.}

\item{analysis_type}{Whether to plot heatmap for differential abundance (DA) or
differential state (DS) test results.}

\item{top_n}{Number of top clusters (DA tests) or cluster-marker combinations (DS
tests) to display. Default = 20.}

\item{threshold}{Threshold for significant adjusted p-values. Default = 0.1.}

\item{res}{Object containing differential test results. Alternatively, the combined
output object from the wrapper function \code{\link{diffcyt}} can be provided.}

\item{d_se}{Data object. Alternatively, the combined output object from the wrapper
function \code{\link{diffcyt}} can be provided.}

\item{d_counts}{Data object. Alternatively, the combined output object from the wrapper
function \code{\link{diffcyt}} can be provided.}

\item{d_medians}{Data object. (Required for DS tests only.) Alternatively, the combined
output object from the wrapper function \code{\link{diffcyt}} can be provided.}

\item{d_medians_all_samples}{Data object. Alternatively, the combined output object
from the wrapper function \code{\link{diffcyt}} can be provided.}
}
\value{
Displays a heatmap.
}
\description{
Plot heatmap showing top clusters or cluster-marker combinations
}
\details{
Display heatmap to visualize results for the top (most highly significant) detected
clusters or cluster-marker combinations.

For DA tests, the heatmap consists of the following panels:

\itemize{
\item median (arcsinh-transformed) expression (across all samples) for 'cell type'
markers
\item cluster abundances by sample
\item row annotation indicating significant detected clusters
}

For DS tests, the heatmap consists of:

\itemize{
\item median (arcsinh-transformed) expression (across all samples) for 'cell type'
markers
\item median (arcsinh-transformed) expression (across all samples) for 'cell state'
markers
\item median (arcsinh-transformed) expression (by sample) for 'cell state' markers for
the top cluster-marker combinations
\item row annotation indicating significant detected cluster-marker combinations
}

Heatmaps are generated using the \code{ComplexHeatmap} package (Gu et al., 2016), and
color scales are generated using the \code{circlize} package (Gu et al., 2014). Both
packages are available from Bioconductor.
}
\examples{
# See the package vignette for a full workflow example demonstrating each type of
# differential discovery analysis (DA and DS), and explaining each function in the
# 'diffcyt' pipeline.

# Create some random data (without differential signal)
cofactor <- 5
set.seed(123)
d_input <- list(
  sample1 = sinh(matrix(rnorm(20000, mean = 0, sd = 1), ncol = 20)) * cofactor, 
  sample2 = sinh(matrix(rnorm(20000, mean = 0, sd = 1), ncol = 20)) * cofactor, 
  sample3 = sinh(matrix(rnorm(20000, mean = 0, sd = 1), ncol = 20)) * cofactor, 
  sample4 = sinh(matrix(rnorm(20000, mean = 0, sd = 1), ncol = 20)) * cofactor
)
# Add differential signal (for some cells and markers in one group)
ix_rows <- 901:1000
ix_cols <- c(6:10, 16:20)
d_input[[3]][ix_rows, ix_cols] <- sinh(matrix(rnorm(1000, mean = 2, sd = 1), ncol = 10)) * cofactor
d_input[[4]][ix_rows, ix_cols] <- sinh(matrix(rnorm(1000, mean = 2, sd = 1), ncol = 10)) * cofactor

sample_info <- data.frame(
  sample = factor(paste0("sample", 1:4)), 
  group = factor(c("group1", "group1", "group2", "group2")), 
  stringsAsFactors = FALSE
)

marker_info <- data.frame(
  marker_name = paste0("marker", 1:20), 
  is_marker = rep(TRUE, 20), 
  is_type_marker = c(rep(TRUE, 10), rep(FALSE, 10)), 
  is_state_marker = c(rep(FALSE, 10), rep(TRUE, 10)), 
  stringsAsFactors = FALSE
)

# Create design matrix
design <- createDesignMatrix(sample_info, cols_include = 2)
# Create contrast matrix
contrast <- createContrast(c(0, 1))

# Test for differential abundance (DA) of clusters (using default method 'diffcyt-DA-edgeR')
out_DA <- diffcyt(d_input, sample_info, marker_info, 
                  design = design, contrast = contrast, 
                  analysis_type = "DA", method_DA = "diffcyt-DA-edgeR")

# Test for differential states (DS) within clusters (using default method 'diffcyt-DS-limma')
out_DS <- diffcyt(d_input, sample_info, marker_info, 
                  design = design, contrast = contrast, 
                  analysis_type = "DS", method_DS = "diffcyt-DS-limma", 
                  plot = FALSE)

# Display results for top DA clusters
topClusters(out_DA$res)

# Display results for top DS cluster-marker combinations
topClusters(out_DS$res)

# Plot heatmap for DA tests
plotHeatmap(out_DA, analysis_type = "DA")

# Plot heatmap for DS tests
plotHeatmap(out_DS, analysis_type = "DS")

}
